"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TweetFilter = void 0;
/**
 * The filter to be used for searching tweets.
 *
 * @public
 */
var TweetFilter = /** @class */ (function () {
    /**
     * @param filter - The filter configuration.
     */
    function TweetFilter(filter) {
        /**
         * Whether to fetch tweets that are links or not.
         *
         * @defaultValue true
         */
        this.links = true;
        /**
         * Whether to fetch tweets that are replies or not.
         *
         * @defaultValue true
         */
        this.replies = true;
        this.endDate = filter.endDate;
        this.excludeWords = filter.excludeWords;
        this.fromUsers = filter.fromUsers;
        this.hashtags = filter.hashtags;
        this.includePhrase = filter.includePhrase;
        this.language = filter.language;
        this.links = filter.links;
        this.replies = filter.replies;
        this.mentions = filter.mentions;
        this.quoted = filter.quoted;
        this.sinceId = filter.sinceId;
        this.maxId = filter.maxId;
        this.minLikes = filter.minLikes;
        this.minReplies = filter.minReplies;
        this.minRetweets = filter.minRetweets;
        this.optionalWords = filter.optionalWords;
        this.startDate = filter.startDate;
        this.toUsers = filter.toUsers;
        this.includeWords = filter.includeWords;
    }
    /**
     * Convert Date object to Twitter string representation.
     * eg - 2023-06-23_11:21:06_UTC
     *
     * @param date - The date object to convert.
     * @returns The Twitter string representation of the date.
     *
     * @internal
     */
    TweetFilter.dateToTwitterString = function (date) {
        // Converting localized date to UTC date
        var utc = new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds()));
        /**
         * To convert ISO 8601 date string to Twitter date string:
         *
         * - 'T' between date and time substring is replace with '_'.
         * - Milliseconds substring is omitted.
         * - '_UTC' is appended as suffix.
         */
        return utc.toISOString().replace(/T/, '_').replace(/\..+/, '') + '_UTC';
    };
    /**
     * @returns The string representation of 'this' filter.
     *
     * @internal
     */
    TweetFilter.prototype.toString = function () {
        return ([
            this.includeWords ? this.includeWords.join(' ') : '',
            this.includePhrase ? "\"".concat(this.includePhrase, "\"") : '',
            this.optionalWords ? "(".concat(this.optionalWords.join(' OR '), ")") : '',
            this.excludeWords ? "".concat(this.excludeWords.map(function (word) { return '-' + word; }).join(' ')) : '',
            this.hashtags ? "(".concat(this.hashtags.map(function (hashtag) { return '#' + hashtag; }).join(' OR '), ")") : '',
            this.fromUsers ? "(".concat(this.fromUsers.map(function (user) { return "from:".concat(user); }).join(' OR '), ")") : '',
            this.toUsers ? "(".concat(this.toUsers.map(function (user) { return "to:".concat(user); }).join(' OR '), ")") : '',
            this.mentions ? "(".concat(this.mentions.map(function (mention) { return '@' + mention; }).join(' OR '), ")") : '',
            this.minReplies ? "min_replies:".concat(this.minReplies) : '',
            this.minLikes ? "min_faves:".concat(this.minLikes) : '',
            this.minRetweets ? "min_retweets:".concat(this.minRetweets) : '',
            this.language ? "lang:".concat(this.language) : '',
            this.startDate ? "since:".concat(TweetFilter.dateToTwitterString(this.startDate)) : '',
            this.endDate ? "until:".concat(TweetFilter.dateToTwitterString(this.endDate)) : '',
            this.sinceId ? "since_id:".concat(this.sinceId) : '',
            this.maxId ? "max_id:".concat(this.maxId) : '',
            this.quoted ? "quoted_tweet_id:".concat(this.quoted) : '',
        ]
            .filter(function (item) { return item !== '()' && item !== ''; })
            .join(' ') +
            (this.links == false ? ' -filter:links' : '') +
            (this.replies == false ? ' -filter:replies' : ''));
    };
    return TweetFilter;
}());
exports.TweetFilter = TweetFilter;
//# sourceMappingURL=TweetFilter.js.map