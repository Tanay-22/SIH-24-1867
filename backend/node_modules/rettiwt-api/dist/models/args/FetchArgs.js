"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TweetFilter = exports.FetchArgs = void 0;
var class_validator_1 = require("class-validator");
var rettiwt_core_1 = require("rettiwt-core");
var Resource_1 = require("../../enums/Resource");
var DataValidationError_1 = require("../errors/DataValidationError");
/**
 * Options specifying the data that is to be fetched.
 *
 * @public
 */
var FetchArgs = exports.FetchArgs = /** @class */ (function () {
    /**
     * @param resource - The resource to be fetched.
     * @param args - Additional user-defined arguments for fetching the resource.
     */
    function FetchArgs(resource, args) {
        this.id = args.id;
        this.count = args.count;
        this.cursor = args.cursor;
        this.filter = args.filter ? new TweetFilter(args.filter) : undefined;
        // Validating this object
        var validationResult = (0, class_validator_1.validateSync)(this, { groups: [resource] });
        // If valiation error occured
        if (validationResult.length) {
            throw new DataValidationError_1.DataValidationError(validationResult);
        }
    }
    __decorate([
        (0, class_validator_1.IsEmpty)({
            groups: [
                Resource_1.EResourceType.TWEET_DETAILS,
                Resource_1.EResourceType.TWEET_DETAILS_ALT,
                Resource_1.EResourceType.USER_DETAILS_BY_ID,
                Resource_1.EResourceType.USER_DETAILS_BY_USERNAME,
                Resource_1.EResourceType.USER_FEED_FOLLOWED,
                Resource_1.EResourceType.USER_FEED_RECOMMENDED,
            ],
        }),
        (0, class_validator_1.IsOptional)({
            groups: [
                Resource_1.EResourceType.LIST_TWEETS,
                Resource_1.EResourceType.TWEET_RETWEETERS,
                Resource_1.EResourceType.TWEET_SEARCH,
                Resource_1.EResourceType.USER_FOLLOWERS,
                Resource_1.EResourceType.USER_FOLLOWING,
                Resource_1.EResourceType.USER_HIGHLIGHTS,
                Resource_1.EResourceType.USER_LIKES,
                Resource_1.EResourceType.USER_MEDIA,
                Resource_1.EResourceType.USER_NOTIFICATIONS,
                Resource_1.EResourceType.USER_SUBSCRIPTIONS,
                Resource_1.EResourceType.USER_TIMELINE,
                Resource_1.EResourceType.USER_TIMELINE_AND_REPLIES,
            ],
        }),
        (0, class_validator_1.Min)(1, {
            groups: [
                Resource_1.EResourceType.LIST_TWEETS,
                Resource_1.EResourceType.TWEET_RETWEETERS,
                Resource_1.EResourceType.TWEET_SEARCH,
                Resource_1.EResourceType.USER_FOLLOWERS,
                Resource_1.EResourceType.USER_FOLLOWING,
                Resource_1.EResourceType.USER_HIGHLIGHTS,
                Resource_1.EResourceType.USER_LIKES,
                Resource_1.EResourceType.USER_MEDIA,
                Resource_1.EResourceType.USER_NOTIFICATIONS,
                Resource_1.EResourceType.USER_SUBSCRIPTIONS,
                Resource_1.EResourceType.USER_TIMELINE,
                Resource_1.EResourceType.USER_TIMELINE_AND_REPLIES,
            ],
        }),
        (0, class_validator_1.Max)(100, {
            groups: [
                Resource_1.EResourceType.LIST_TWEETS,
                Resource_1.EResourceType.TWEET_RETWEETERS,
                Resource_1.EResourceType.USER_FOLLOWERS,
                Resource_1.EResourceType.USER_FOLLOWING,
                Resource_1.EResourceType.USER_HIGHLIGHTS,
                Resource_1.EResourceType.USER_LIKES,
                Resource_1.EResourceType.USER_MEDIA,
                Resource_1.EResourceType.USER_SUBSCRIPTIONS,
            ],
        }),
        (0, class_validator_1.Max)(40, {
            groups: [Resource_1.EResourceType.USER_NOTIFICATIONS],
        }),
        (0, class_validator_1.Max)(20, {
            groups: [Resource_1.EResourceType.TWEET_SEARCH, Resource_1.EResourceType.USER_TIMELINE, Resource_1.EResourceType.USER_TIMELINE_AND_REPLIES],
        }),
        __metadata("design:type", Number)
    ], FetchArgs.prototype, "count", void 0);
    __decorate([
        (0, class_validator_1.IsEmpty)({
            groups: [
                Resource_1.EResourceType.TWEET_DETAILS,
                Resource_1.EResourceType.TWEET_DETAILS_ALT,
                Resource_1.EResourceType.USER_DETAILS_BY_ID,
                Resource_1.EResourceType.USER_DETAILS_BY_USERNAME,
            ],
        }),
        (0, class_validator_1.IsOptional)({
            groups: [
                Resource_1.EResourceType.LIST_TWEETS,
                Resource_1.EResourceType.TWEET_RETWEETERS,
                Resource_1.EResourceType.TWEET_SEARCH,
                Resource_1.EResourceType.USER_FEED_FOLLOWED,
                Resource_1.EResourceType.USER_FEED_RECOMMENDED,
                Resource_1.EResourceType.USER_FOLLOWING,
                Resource_1.EResourceType.USER_FOLLOWERS,
                Resource_1.EResourceType.USER_HIGHLIGHTS,
                Resource_1.EResourceType.USER_LIKES,
                Resource_1.EResourceType.USER_MEDIA,
                Resource_1.EResourceType.USER_NOTIFICATIONS,
                Resource_1.EResourceType.USER_SUBSCRIPTIONS,
                Resource_1.EResourceType.USER_TIMELINE,
                Resource_1.EResourceType.USER_TIMELINE_AND_REPLIES,
            ],
        }),
        (0, class_validator_1.IsString)({
            groups: [
                Resource_1.EResourceType.LIST_TWEETS,
                Resource_1.EResourceType.TWEET_RETWEETERS,
                Resource_1.EResourceType.TWEET_SEARCH,
                Resource_1.EResourceType.USER_FEED_FOLLOWED,
                Resource_1.EResourceType.USER_FEED_RECOMMENDED,
                Resource_1.EResourceType.USER_FOLLOWING,
                Resource_1.EResourceType.USER_FOLLOWERS,
                Resource_1.EResourceType.USER_HIGHLIGHTS,
                Resource_1.EResourceType.USER_LIKES,
                Resource_1.EResourceType.USER_MEDIA,
                Resource_1.EResourceType.USER_NOTIFICATIONS,
                Resource_1.EResourceType.USER_SUBSCRIPTIONS,
                Resource_1.EResourceType.USER_TIMELINE,
                Resource_1.EResourceType.USER_TIMELINE_AND_REPLIES,
            ],
        }),
        __metadata("design:type", String)
    ], FetchArgs.prototype, "cursor", void 0);
    __decorate([
        (0, class_validator_1.IsEmpty)({
            groups: [
                Resource_1.EResourceType.LIST_TWEETS,
                Resource_1.EResourceType.TWEET_DETAILS,
                Resource_1.EResourceType.TWEET_DETAILS_ALT,
                Resource_1.EResourceType.TWEET_RETWEETERS,
                Resource_1.EResourceType.USER_DETAILS_BY_USERNAME,
                Resource_1.EResourceType.USER_DETAILS_BY_ID,
                Resource_1.EResourceType.USER_FEED_FOLLOWED,
                Resource_1.EResourceType.USER_FEED_RECOMMENDED,
                Resource_1.EResourceType.USER_FOLLOWING,
                Resource_1.EResourceType.USER_FOLLOWERS,
                Resource_1.EResourceType.USER_HIGHLIGHTS,
                Resource_1.EResourceType.USER_LIKES,
                Resource_1.EResourceType.USER_MEDIA,
                Resource_1.EResourceType.USER_NOTIFICATIONS,
                Resource_1.EResourceType.USER_SUBSCRIPTIONS,
                Resource_1.EResourceType.USER_TIMELINE,
                Resource_1.EResourceType.USER_TIMELINE_AND_REPLIES,
            ],
        }),
        (0, class_validator_1.IsNotEmpty)({ groups: [Resource_1.EResourceType.TWEET_SEARCH] }),
        (0, class_validator_1.IsObject)({ groups: [Resource_1.EResourceType.TWEET_SEARCH] }),
        __metadata("design:type", TweetFilter)
    ], FetchArgs.prototype, "filter", void 0);
    __decorate([
        (0, class_validator_1.IsEmpty)({
            groups: [
                Resource_1.EResourceType.USER_FEED_FOLLOWED,
                Resource_1.EResourceType.USER_FEED_RECOMMENDED,
                Resource_1.EResourceType.USER_NOTIFICATIONS,
            ],
        }),
        (0, class_validator_1.IsNotEmpty)({
            groups: [
                Resource_1.EResourceType.LIST_TWEETS,
                Resource_1.EResourceType.TWEET_DETAILS,
                Resource_1.EResourceType.TWEET_DETAILS_ALT,
                Resource_1.EResourceType.TWEET_RETWEETERS,
                Resource_1.EResourceType.USER_DETAILS_BY_USERNAME,
                Resource_1.EResourceType.USER_DETAILS_BY_ID,
                Resource_1.EResourceType.USER_FOLLOWERS,
                Resource_1.EResourceType.USER_FOLLOWING,
                Resource_1.EResourceType.USER_HIGHLIGHTS,
                Resource_1.EResourceType.USER_LIKES,
                Resource_1.EResourceType.USER_MEDIA,
                Resource_1.EResourceType.USER_SUBSCRIPTIONS,
                Resource_1.EResourceType.USER_TIMELINE,
                Resource_1.EResourceType.USER_TIMELINE_AND_REPLIES,
            ],
        }),
        (0, class_validator_1.IsString)({
            groups: [
                Resource_1.EResourceType.LIST_TWEETS,
                Resource_1.EResourceType.TWEET_DETAILS,
                Resource_1.EResourceType.TWEET_DETAILS_ALT,
                Resource_1.EResourceType.TWEET_RETWEETERS,
                Resource_1.EResourceType.USER_DETAILS_BY_USERNAME,
                Resource_1.EResourceType.USER_DETAILS_BY_ID,
                Resource_1.EResourceType.USER_FOLLOWING,
                Resource_1.EResourceType.USER_FOLLOWERS,
                Resource_1.EResourceType.USER_HIGHLIGHTS,
                Resource_1.EResourceType.USER_LIKES,
                Resource_1.EResourceType.USER_MEDIA,
                Resource_1.EResourceType.USER_SUBSCRIPTIONS,
                Resource_1.EResourceType.USER_TIMELINE,
                Resource_1.EResourceType.USER_TIMELINE_AND_REPLIES,
            ],
        }),
        (0, class_validator_1.IsNumberString)(undefined, {
            groups: [
                Resource_1.EResourceType.LIST_TWEETS,
                Resource_1.EResourceType.TWEET_DETAILS,
                Resource_1.EResourceType.TWEET_DETAILS_ALT,
                Resource_1.EResourceType.TWEET_RETWEETERS,
                Resource_1.EResourceType.USER_DETAILS_BY_ID,
                Resource_1.EResourceType.USER_FOLLOWERS,
                Resource_1.EResourceType.USER_FOLLOWING,
                Resource_1.EResourceType.USER_HIGHLIGHTS,
                Resource_1.EResourceType.USER_LIKES,
                Resource_1.EResourceType.USER_MEDIA,
                Resource_1.EResourceType.USER_SUBSCRIPTIONS,
                Resource_1.EResourceType.USER_TIMELINE,
                Resource_1.EResourceType.USER_TIMELINE_AND_REPLIES,
            ],
        }),
        __metadata("design:type", String)
    ], FetchArgs.prototype, "id", void 0);
    return FetchArgs;
}());
/**
 * The filter to be used for searching tweets.
 *
 * @public
 */
var TweetFilter = exports.TweetFilter = /** @class */ (function (_super) {
    __extends(TweetFilter, _super);
    /**
     * @param filter - The filter to use for searching tweets.
     */
    function TweetFilter(filter) {
        var _this = _super.call(this, filter) || this;
        // Validating this object
        var validationResult = (0, class_validator_1.validateSync)(_this);
        // If valiation error occured
        if (validationResult.length) {
            throw new DataValidationError_1.DataValidationError(validationResult);
        }
        return _this;
    }
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsDate)(),
        __metadata("design:type", Date)
    ], TweetFilter.prototype, "endDate", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsArray)(),
        (0, class_validator_1.IsString)({ each: true }),
        __metadata("design:type", Array)
    ], TweetFilter.prototype, "excludeWords", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsArray)(),
        (0, class_validator_1.IsString)({ each: true }),
        __metadata("design:type", Array)
    ], TweetFilter.prototype, "fromUsers", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsArray)(),
        (0, class_validator_1.IsString)({ each: true }),
        __metadata("design:type", Array)
    ], TweetFilter.prototype, "hashtags", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsString)(),
        __metadata("design:type", String)
    ], TweetFilter.prototype, "includePhrase", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsArray)(),
        (0, class_validator_1.IsString)({ each: true }),
        __metadata("design:type", Array)
    ], TweetFilter.prototype, "includeWords", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsString)(),
        __metadata("design:type", String)
    ], TweetFilter.prototype, "language", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsBoolean)(),
        __metadata("design:type", Boolean)
    ], TweetFilter.prototype, "links", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsNumberString)(),
        __metadata("design:type", String)
    ], TweetFilter.prototype, "maxId", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsArray)(),
        (0, class_validator_1.IsString)({ each: true }),
        __metadata("design:type", Array)
    ], TweetFilter.prototype, "mentions", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsNumber)(),
        __metadata("design:type", Number)
    ], TweetFilter.prototype, "minLikes", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsNumber)(),
        __metadata("design:type", Number)
    ], TweetFilter.prototype, "minReplies", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsNumber)(),
        __metadata("design:type", Number)
    ], TweetFilter.prototype, "minRetweets", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsArray)(),
        (0, class_validator_1.IsString)({ each: true }),
        __metadata("design:type", Array)
    ], TweetFilter.prototype, "optionalWords", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsNumberString)(),
        __metadata("design:type", String)
    ], TweetFilter.prototype, "quoted", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsBoolean)(),
        __metadata("design:type", Boolean)
    ], TweetFilter.prototype, "replies", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsNumberString)(),
        __metadata("design:type", String)
    ], TweetFilter.prototype, "sinceId", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsDate)(),
        __metadata("design:type", Date)
    ], TweetFilter.prototype, "startDate", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsArray)(),
        (0, class_validator_1.IsString)({ each: true }),
        __metadata("design:type", Array)
    ], TweetFilter.prototype, "toUsers", void 0);
    return TweetFilter;
}(rettiwt_core_1.TweetFilter));
//# sourceMappingURL=FetchArgs.js.map