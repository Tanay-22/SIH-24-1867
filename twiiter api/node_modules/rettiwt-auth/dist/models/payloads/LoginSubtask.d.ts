import { ELoginSubtasks } from '../../enums/Login';
import { JsInstrumentationInput } from './subtask_inputs/JsInstrumentation';
import { UserIdentifierInput } from './subtask_inputs/UserIdentifier';
import { AlternateUserIdentifierInput } from './subtask_inputs/AlternateUserIdentifier';
import { PasswordInput } from './subtask_inputs/Password';
import { AccountDuplicationCheckInput } from './subtask_inputs/AccountDuplicationCheck';
/**
 * The payload to be sent for each login subtask.
 */
export declare class LoginSubtaskPayload {
    flow_token: string;
    subtask_inputs: LoginSubtaskInput[];
    /**
     * @param subtaskId - The id of the subtask to be executed.
     * @param flowToken - The flow token for the subtask to be executed.
     * @param inputText - The input string data to be sent in payload.
     */
    constructor(subtaskId: ELoginSubtasks, flowToken: string, inputText?: string);
}
/**
 * The subtask input according to the type of subtask to be executed.
 */
declare class LoginSubtaskInput {
    subtask_id: string;
    js_instrumentation?: JsInstrumentationInput;
    settings_list?: UserIdentifierInput;
    enter_text?: AlternateUserIdentifierInput;
    enter_password?: PasswordInput;
    check_logged_in_account?: AccountDuplicationCheckInput;
    /**
     * @param subtaskId - The id of the subtask to be executed.
     * @param inputText - The input string data to be sent.
     */
    constructor(subtaskId: ELoginSubtasks, inputText?: string);
}
export {};
