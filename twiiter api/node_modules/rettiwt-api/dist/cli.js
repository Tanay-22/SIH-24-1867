#! /usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
var commander_1 = require("commander");
var Auth_1 = __importDefault(require("./commands/Auth"));
var Tweet_1 = __importDefault(require("./commands/Tweet"));
var User_1 = __importDefault(require("./commands/User"));
var Rettiwt_1 = require("./Rettiwt");
// Creating a new commandline program
var program = (0, commander_1.createCommand)('rettiwt')
    .description('A CLI tool for accessing the Twitter API for free!')
    .passThroughOptions()
    .enablePositionalOptions();
// Adding options
program
    .option('-k, --key <string>', 'The API key to use for authentication')
    .option('-l, --log', 'Enable logging to console')
    .option('-p, --proxy <string>', 'The URL to the proxy to use')
    .option('-t, --timeout <number>', 'The timout (in milli-seconds) to use for requests');
// Parsing the program to get supplied options
program.parse();
// Initializing Rettiwt instance using the given options
var rettiwt = new Rettiwt_1.Rettiwt({
    apiKey: (_a = process.env.API_KEY) !== null && _a !== void 0 ? _a : program.opts().key,
    logging: program.opts().log ? true : false,
    proxyUrl: program.opts().proxy,
    timeout: program.opts().timeout ? Number(program.opts().timeout) : undefined,
});
// Adding sub-commands
program.addCommand((0, Tweet_1.default)(rettiwt));
program.addCommand((0, User_1.default)(rettiwt));
program.addCommand((0, Auth_1.default)(rettiwt));
// Finalizing the CLI
program.parse();
//# sourceMappingURL=cli.js.map