import { AxiosRequestConfig } from 'axios';
import { NewTweet } from '../models/args/NewTweet';
import { TweetFilter } from '../models/args/TweetFilter';
/**
 * @param id - The id of the tweet whose details are to be fetched.
 *
 * @public
 */
export declare function details(id: string): AxiosRequestConfig;
/**
 * @param id - The id of the tweet to be liked.
 *
 * @public
 */
export declare function like(id: string): AxiosRequestConfig;
/**
 * @param id - The id of the tweet whose likers are to be fetched.
 * @param count - The number of likers to fetch. Only works as a lower limit when used with a cursor.
 * @param cursor - The cursor to the batch of likers to fetch.
 *
 * @public
 */
export declare function likers(id: string, count?: number, cursor?: string): AxiosRequestConfig;
/**
 * @param args - The configuration object for the tweet to be posted.
 *
 * @public
 */
export declare function post(args: NewTweet): AxiosRequestConfig;
/**
 * @param id - The id of the tweet whose replies are to be fetched.
 * @param count - The number of replies to fetch. Only works as a lower limit when used with a cursor.
 * @param cursor - The cursor to the batch of replies to fetch.
 *
 * @public
 */
export declare function replies(id: string, count?: number, cursor?: string): AxiosRequestConfig;
/**
 * @param id - The id of the tweet which is to be retweeted.
 *
 * @public
 */
export declare function retweet(id: string): AxiosRequestConfig;
/**
 * @param id - The id of the tweet whose retweeters are to be fetched.
 * @param count - The number of retweeters to fetch. Only works as a lower limit when used with a cursor.
 * @param cursor - The cursor to the batch of retweeters to fetch.
 *
 * @public
 */
export declare function retweeters(id: string, count?: number, cursor?: string): AxiosRequestConfig;
/**
 * @param tweet - The configuration object for the tweet to be posted.
 * @param time - A `Date` object representing the date and time at which the tweet is to be posted.
 *
 * @remarks - Only `text` and `media.id` parameters are supported.
 *
 * @public
 */
export declare function schedule(tweet: NewTweet, time: Date): AxiosRequestConfig;
/**
 * @param filter - The filter to use for searching tweets.
 * @param count - The number of tweets to fetch. Only works as a lower limit when used with a cursor.
 * @param cursor - The cursor to the batch of tweets to fetch.
 *
 * @public
 */
export declare function search(filter: TweetFilter, count?: number, cursor?: string): AxiosRequestConfig;
/**
 * @param id - The id of the tweet to be unliked.
 *
 * @public
 */
export declare function unlike(id: string): AxiosRequestConfig;
/**
 * @param id - The id of the tweet to be unposted.
 *
 * @public
 */
export declare function unpost(id: string): AxiosRequestConfig;
/**
 * @param id - The id of the source tweet (which was retweeted), to be unretweeted.
 *
 * @public
 */
export declare function unretweet(id: string): AxiosRequestConfig;
/**
 * @param id - The id of the scheduled tweet to be unscheduled.
 *
 * @public
 */
export declare function unschedule(id: string): AxiosRequestConfig;
