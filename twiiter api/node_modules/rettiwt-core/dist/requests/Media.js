"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.initializeUpload = exports.finalizeUpload = exports.appendUpload = void 0;
var fs_1 = __importDefault(require("fs"));
var form_data_1 = __importDefault(require("form-data"));
/**
 * @param id - The allocated id of the media item to be uploaded.
 * @param media - The media item to upload.
 *
 * @public
 */
function appendUpload(id, media) {
    var data = new form_data_1.default();
    data.append('media', typeof media == 'string' ? fs_1.default.createReadStream(media) : Buffer.from(media));
    return {
        method: 'post',
        headers: { referer: 'https://x.com' },
        url: 'https://upload.x.com/i/media/upload.json',
        params: {
            /* eslint-disable @typescript-eslint/naming-convention */
            command: 'APPEND',
            media_id: id,
            segment_index: 0,
            /* eslint-enable @typescript-eslint/naming-convention */
        },
        data: data,
    };
}
exports.appendUpload = appendUpload;
/**
 * @param id - The allocated id of the media item.
 *
 * @public
 */
function finalizeUpload(id) {
    return {
        method: 'post',
        headers: { referer: 'https://x.com' },
        url: 'https://upload.x.com/i/media/upload.json',
        params: {
            /* eslint-disable @typescript-eslint/naming-convention */
            command: 'FINALIZE',
            media_id: id,
            /* eslint-enable @typescript-eslint/naming-convention */
        },
    };
}
exports.finalizeUpload = finalizeUpload;
/**
 * @param size - The size (in bytes) of the media item to be uploaded.
 *
 * @public
 */
function initializeUpload(size) {
    return {
        method: 'post',
        headers: { referer: 'https://x.com' },
        url: 'https://upload.x.com/i/media/upload.json',
        params: {
            /* eslint-disable @typescript-eslint/naming-convention */
            command: 'INIT',
            total_bytes: size,
            /* eslint-enable @typescript-eslint/naming-convention */
        },
    };
}
exports.initializeUpload = initializeUpload;
//# sourceMappingURL=Media.js.map