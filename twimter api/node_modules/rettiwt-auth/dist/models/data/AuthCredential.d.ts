import { AxiosHeaders } from 'axios';
import { EAuthenticationType } from '../../enums/Authentication';
/**
 * The credentials for authenticating against Twitter.
 *
 * Depending on which tokens are present, the authentication type is determined as follows:
 * - authToken, guestToken =\> Guest authentication.
 * - authToken, csrfToken, cookie =\> User authentication.
 * - authToken, guestToken, cookie =\> Guest authentication while logging in.
 */
export declare class AuthCredential {
    /** The bearer token from twitter.com. */
    authToken?: string;
    /** The guest token provided by Twitter API. */
    guestToken?: string;
    /** The CSRF token for the session. */
    csrfToken?: string;
    /** The cookie of the twitter account, which is used to authenticate against twitter. */
    cookies?: string;
    /** The type of authentication. */
    authenticationType?: EAuthenticationType;
    /**
     * @param cookies - The list of cookie strings to be used for authenticating against Twitter.
     * @param guestToken - The guest token to be used to authenticate a guest session.
     */
    constructor(cookies?: string[], guestToken?: string);
    /**
     * @returns The HTTP header representation of 'this' object.
     */
    toHeader(): AxiosHeaders;
}
