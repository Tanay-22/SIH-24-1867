"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadArgs = exports.TweetMediaArgs = exports.TweetArgs = exports.PostArgs = void 0;
var class_validator_1 = require("class-validator");
var rettiwt_core_1 = require("rettiwt-core");
var Resource_1 = require("../../enums/Resource");
var DataValidationError_1 = require("../errors/DataValidationError");
/**
 * Options specifying the data that is to be posted.
 *
 * @public
 */
var PostArgs = exports.PostArgs = /** @class */ (function () {
    /**
     * @param resource - The resource to be posted.
     * @param args - Additional user-defined arguments for posting the resource.
     */
    function PostArgs(resource, args) {
        this.id = args.id;
        this.tweet = args.tweet ? new TweetArgs(resource, args.tweet) : undefined;
        this.upload = args.upload ? new UploadArgs(resource, args.upload) : undefined;
        // Validating this object
        var validationResult = (0, class_validator_1.validateSync)(this, { groups: [resource] });
        // If valiation error occured
        if (validationResult.length) {
            throw new DataValidationError_1.DataValidationError(validationResult);
        }
    }
    __decorate([
        (0, class_validator_1.IsEmpty)({
            groups: [
                Resource_1.EResourceType.MEDIA_UPLOAD_APPEND,
                Resource_1.EResourceType.MEDIA_UPLOAD_FINALIZE,
                Resource_1.EResourceType.MEDIA_UPLOAD_INITIALIZE,
                Resource_1.EResourceType.TWEET_POST,
                Resource_1.EResourceType.TWEET_SCHEDULE,
            ],
        }),
        (0, class_validator_1.IsNotEmpty)({
            groups: [
                Resource_1.EResourceType.TWEET_LIKE,
                Resource_1.EResourceType.TWEET_RETWEET,
                Resource_1.EResourceType.TWEET_UNLIKE,
                Resource_1.EResourceType.TWEET_UNPOST,
                Resource_1.EResourceType.TWEET_UNRETWEET,
                Resource_1.EResourceType.TWEET_UNSCHEDULE,
                Resource_1.EResourceType.USER_FOLLOW,
                Resource_1.EResourceType.USER_UNFOLLOW,
            ],
        }),
        (0, class_validator_1.IsNumberString)(undefined, {
            groups: [
                Resource_1.EResourceType.TWEET_LIKE,
                Resource_1.EResourceType.TWEET_RETWEET,
                Resource_1.EResourceType.TWEET_UNLIKE,
                Resource_1.EResourceType.TWEET_UNPOST,
                Resource_1.EResourceType.TWEET_UNRETWEET,
                Resource_1.EResourceType.TWEET_UNSCHEDULE,
                Resource_1.EResourceType.USER_FOLLOW,
                Resource_1.EResourceType.USER_UNFOLLOW,
            ],
        }),
        __metadata("design:type", String)
    ], PostArgs.prototype, "id", void 0);
    __decorate([
        (0, class_validator_1.IsEmpty)({
            groups: [
                Resource_1.EResourceType.MEDIA_UPLOAD_APPEND,
                Resource_1.EResourceType.MEDIA_UPLOAD_FINALIZE,
                Resource_1.EResourceType.MEDIA_UPLOAD_INITIALIZE,
                Resource_1.EResourceType.TWEET_LIKE,
                Resource_1.EResourceType.TWEET_RETWEET,
                Resource_1.EResourceType.TWEET_UNLIKE,
                Resource_1.EResourceType.TWEET_UNPOST,
                Resource_1.EResourceType.TWEET_UNRETWEET,
                Resource_1.EResourceType.TWEET_UNSCHEDULE,
                Resource_1.EResourceType.USER_FOLLOW,
                Resource_1.EResourceType.USER_UNFOLLOW,
            ],
        }),
        (0, class_validator_1.IsNotEmpty)({ groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.IsObject)({ groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        __metadata("design:type", TweetArgs)
    ], PostArgs.prototype, "tweet", void 0);
    __decorate([
        (0, class_validator_1.IsEmpty)({
            groups: [
                Resource_1.EResourceType.MEDIA_UPLOAD_APPEND,
                Resource_1.EResourceType.MEDIA_UPLOAD_FINALIZE,
                Resource_1.EResourceType.MEDIA_UPLOAD_INITIALIZE,
            ],
        }),
        (0, class_validator_1.IsNotEmpty)({
            groups: [
                Resource_1.EResourceType.MEDIA_UPLOAD_INITIALIZE,
                Resource_1.EResourceType.MEDIA_UPLOAD_APPEND,
                Resource_1.EResourceType.MEDIA_UPLOAD_FINALIZE,
            ],
        }),
        (0, class_validator_1.IsObject)({
            groups: [
                Resource_1.EResourceType.MEDIA_UPLOAD_INITIALIZE,
                Resource_1.EResourceType.MEDIA_UPLOAD_APPEND,
                Resource_1.EResourceType.MEDIA_UPLOAD_FINALIZE,
            ],
        }),
        __metadata("design:type", UploadArgs)
    ], PostArgs.prototype, "upload", void 0);
    return PostArgs;
}());
/**
 * Options specifying the tweet that is to be posted.
 *
 * @public
 */
var TweetArgs = exports.TweetArgs = /** @class */ (function (_super) {
    __extends(TweetArgs, _super);
    /**
     * @param args - Arguments specifying the tweet to be posted.
     */
    function TweetArgs(resource, args) {
        var _this = _super.call(this) || this;
        _this.media = args.media ? args.media.map(function (item) { return new TweetMediaArgs(item); }) : undefined;
        _this.quote = args.quote;
        _this.replyTo = args.replyTo;
        _this.scheduleFor = args.scheduleFor;
        _this.text = args.text;
        // Validating this object
        var validationResult = (0, class_validator_1.validateSync)(_this, { groups: [resource] });
        // If valiation error occured
        if (validationResult.length) {
            throw new DataValidationError_1.DataValidationError(validationResult);
        }
        return _this;
    }
    __decorate([
        (0, class_validator_1.IsOptional)({ groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.IsArray)({ groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.ArrayMaxSize)(4, { groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.IsObject)({ each: true, groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        __metadata("design:type", Array)
    ], TweetArgs.prototype, "media", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)({ groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.IsNumberString)(undefined, { groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        __metadata("design:type", String)
    ], TweetArgs.prototype, "quote", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)({ groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.IsNumberString)(undefined, { groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        __metadata("design:type", String)
    ], TweetArgs.prototype, "replyTo", void 0);
    __decorate([
        (0, class_validator_1.IsEmpty)({ groups: [Resource_1.EResourceType.TWEET_POST] }),
        (0, class_validator_1.IsNotEmpty)({ groups: [Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.IsDate)({ groups: [Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.MinDate)(function () { return new Date(); }, { groups: [Resource_1.EResourceType.TWEET_SCHEDULE] }),
        __metadata("design:type", Date)
    ], TweetArgs.prototype, "scheduleFor", void 0);
    __decorate([
        (0, class_validator_1.IsNotEmpty)({ groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.IsString)({ groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        (0, class_validator_1.MaxLength)(280, { groups: [Resource_1.EResourceType.TWEET_POST, Resource_1.EResourceType.TWEET_SCHEDULE] }),
        __metadata("design:type", String)
    ], TweetArgs.prototype, "text", void 0);
    return TweetArgs;
}(rettiwt_core_1.NewTweet));
/**
 * Options specifying the media that is to be posted.
 *
 * @public
 */
var TweetMediaArgs = exports.TweetMediaArgs = /** @class */ (function (_super) {
    __extends(TweetMediaArgs, _super);
    /**
     * @param args - Arguments specifying the media to be posted.
     */
    function TweetMediaArgs(args) {
        var _this = this;
        var _a;
        _this = _super.call(this) || this;
        _this.id = args.id;
        _this.tags = (_a = args.tags) !== null && _a !== void 0 ? _a : [];
        // Validating this object
        var validationResult = (0, class_validator_1.validateSync)(_this);
        // If validation error occured
        if (validationResult.length) {
            throw new DataValidationError_1.DataValidationError(validationResult);
        }
        return _this;
    }
    __decorate([
        (0, class_validator_1.IsNotEmpty)(),
        (0, class_validator_1.IsNumberString)(),
        __metadata("design:type", String)
    ], TweetMediaArgs.prototype, "id", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsArray)(),
        (0, class_validator_1.ArrayMaxSize)(10),
        (0, class_validator_1.IsNumberString)(undefined, { each: true }),
        __metadata("design:type", Array)
    ], TweetMediaArgs.prototype, "tags", void 0);
    return TweetMediaArgs;
}(rettiwt_core_1.NewTweetMedia));
/**
 * Options specifying the media file to be uploaded.
 *
 * @internal
 */
var UploadArgs = exports.UploadArgs = /** @class */ (function () {
    /**
     * @param step - The upload step.
     * @param args - The upload arguments for uploading the media file.
     */
    function UploadArgs(step, args) {
        this.size = args.size;
        this.media = args.media;
        this.id = args.id;
        // Validating this object
        var validationResult = (0, class_validator_1.validateSync)(this, { groups: [step] });
        // If validation error occured
        if (validationResult.length) {
            throw new DataValidationError_1.DataValidationError(validationResult);
        }
    }
    __decorate([
        (0, class_validator_1.IsEmpty)({ groups: [Resource_1.EResourceType.MEDIA_UPLOAD_INITIALIZE] }),
        (0, class_validator_1.IsNotEmpty)({ groups: [Resource_1.EResourceType.MEDIA_UPLOAD_APPEND, Resource_1.EResourceType.MEDIA_UPLOAD_FINALIZE] }),
        (0, class_validator_1.IsNumberString)(undefined, { groups: [Resource_1.EResourceType.MEDIA_UPLOAD_APPEND, Resource_1.EResourceType.MEDIA_UPLOAD_FINALIZE] }),
        __metadata("design:type", String)
    ], UploadArgs.prototype, "id", void 0);
    __decorate([
        (0, class_validator_1.IsEmpty)({ groups: [Resource_1.EResourceType.MEDIA_UPLOAD_FINALIZE, Resource_1.EResourceType.MEDIA_UPLOAD_INITIALIZE] }),
        (0, class_validator_1.IsNotEmpty)({ groups: [Resource_1.EResourceType.MEDIA_UPLOAD_APPEND] }),
        __metadata("design:type", Object)
    ], UploadArgs.prototype, "media", void 0);
    __decorate([
        (0, class_validator_1.IsEmpty)({ groups: [Resource_1.EResourceType.MEDIA_UPLOAD_APPEND, Resource_1.EResourceType.MEDIA_UPLOAD_FINALIZE] }),
        (0, class_validator_1.IsNotEmpty)({ groups: [Resource_1.EResourceType.MEDIA_UPLOAD_INITIALIZE] }),
        (0, class_validator_1.Max)(5242880, { groups: [Resource_1.EResourceType.MEDIA_UPLOAD_INITIALIZE] }),
        __metadata("design:type", Number)
    ], UploadArgs.prototype, "size", void 0);
    return UploadArgs;
}());
//# sourceMappingURL=PostArgs.js.map