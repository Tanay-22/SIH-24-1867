"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.User = void 0;
var Logging_1 = require("../../enums/Logging");
var JsonUtils_1 = require("../../helper/JsonUtils");
var LogService_1 = require("../../services/internal/LogService");
/**
 * The details of a single user.
 *
 * @public
 */
var User = /** @class */ (function () {
    /**
     * @param user - The raw user details.
     */
    function User(user) {
        this.id = user.rest_id;
        this.userName = user.legacy.screen_name;
        this.fullName = user.legacy.name;
        this.createdAt = user.legacy.created_at;
        this.description = user.legacy.description.length ? user.legacy.description : undefined;
        this.isVerified = user.is_blue_verified;
        this.likeCount = user.legacy.favourites_count;
        this.followersCount = user.legacy.followers_count;
        this.followingsCount = user.legacy.friends_count;
        this.statusesCount = user.legacy.statuses_count;
        this.location = user.legacy.location.length ? user.legacy.location : undefined;
        this.pinnedTweet = user.legacy.pinned_tweet_ids_str[0];
        this.profileBanner = user.legacy.profile_banner_url;
        this.profileImage = user.legacy.profile_image_url_https;
    }
    /**
     * Extracts and deserializes the list of users from the given raw response data.
     *
     * @param response - The raw response data.
     *
     * @returns The deserialized list of users.
     *
     * @internal
     */
    User.list = function (response) {
        var _a, _b;
        var users = [];
        // Extracting the matching data
        var extract = (0, JsonUtils_1.findByFilter)(response, '__typename', 'TimelineUser');
        // Deserializing valid data
        for (var _i = 0, extract_1 = extract; _i < extract_1.length; _i++) {
            var item = extract_1[_i];
            if ((_b = (_a = item.user_results) === null || _a === void 0 ? void 0 : _a.result) === null || _b === void 0 ? void 0 : _b.legacy) {
                // Logging
                LogService_1.LogService.log(Logging_1.ELogActions.DESERIALIZE, { id: item.user_results.result.rest_id });
                users.push(new User(item.user_results.result));
            }
            else {
                // Logging
                LogService_1.LogService.log(Logging_1.ELogActions.WARNING, {
                    action: Logging_1.ELogActions.DESERIALIZE,
                    message: "User not found, skipping",
                });
            }
        }
        return users;
    };
    /**
     * Extracts and deserializes a single target user from the given raw response data.
     *
     * @param response - The raw response data.
     *
     * @returns The target deserialized user.
     *
     * @internal
     */
    User.single = function (response) {
        var users = [];
        // Extracting the matching data
        var extract = (0, JsonUtils_1.findByFilter)(response, '__typename', 'User');
        // Deserializing valid data
        for (var _i = 0, extract_2 = extract; _i < extract_2.length; _i++) {
            var item = extract_2[_i];
            if (item.legacy) {
                // Logging
                LogService_1.LogService.log(Logging_1.ELogActions.DESERIALIZE, { id: item.rest_id });
                users.push(new User(item));
            }
            else {
                // Logging
                LogService_1.LogService.log(Logging_1.ELogActions.WARNING, {
                    action: Logging_1.ELogActions.DESERIALIZE,
                    message: "User not found, skipping",
                });
            }
        }
        return users.length ? users[0] : undefined;
    };
    return User;
}());
exports.User = User;
//# sourceMappingURL=User.js.map